#!/usr/bin/env zsh

() { # Move nix paths to the front of the first non nix-store paths and prune non existing entries
  # a[(i)pattern] gets the index of the first element patching the pattern
  local idx=$((${path[(i)/(opt|usr|Library|bin|sbin)/*]} - 1))
  local a=(${path[1,idx]} $@ ${path[idx,-1]})
  # (glob qualifiers)
  # - works on targets of symlinks
  # F - all non empty directories
  # N - sets NULL_GLOB
  # oN - don't sort results
  path=(${(@)^a}(-FNoN))
} ${(z)^NIX_PROFILES}/bin ${(z)^buildInputs}/bin ${(z)^nativeBuildInputs}/bin

() {
  local idx=$((${fpath[(i)/(opt|usr|Library|bin|sbin)/*]} - 1))
  local a=(${fpath[1,idx]} $@ ${fpath[idx,-1]})
  local x=( "${fpath[@]}" )
  fpath=(${(@)^a}(-FNoN))
  # needed so that nix-direnv lets you get dynamic completion
  [[ ${(pj:\0:)x} != ${(pj:\0:)fpath} ]] && -z4h-compinit
} ${(z)^NIX_PROFILES}/share/zsh/{site-functions,$ZSH_VERSION/functions,vendor-completions} ${(z)^buildInputs}/share/zsh/{site-functions,$ZSH_VERSION/functions,vendor-completions} ${(z)^nativeBuildInputs}/share/zsh/{site-functions,$ZSH_VERSION/functions,vendor-completions}
